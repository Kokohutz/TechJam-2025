apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.kompose.yml -o k8s/ --controller deployment
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: svc-backend
  name: svc-backend
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: svc-backend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.kompose.yml -o k8s/ --controller deployment
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/hackathon-network: "true"
        io.kompose.service: svc-backend
    spec:
      containers:
        - env:
            - name: MODEL_TYPE
              value: cpu
          image: ""
          imagePullPolicy: ""
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8002/health
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: svc-backend
          ports:
            - containerPort: 8002
          resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.kompose.yml -o k8s/ --controller deployment
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: svc-backend
  name: svc-backend
  namespace: myapp
spec:
  ports:
    - name: "8002"
      port: 80
      targetPort: 8002
  selector:
    io.kompose.service: svc-backend
  type: LoadBalancer
status:
  loadBalancer: {}
